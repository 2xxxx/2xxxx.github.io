(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{382:function(t,i,v){"use strict";v.r(i);var _=v(42),e=Object(_.a)({},(function(){var t=this,i=t.$createElement,v=t._self._c||i;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"git使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git使用"}},[t._v("#")]),t._v(" git使用")]),t._v(" "),v("p",[t._v("登录git，拉取代码")]),t._v(" "),v("ul",[v("li",[t._v('git config --global user.name "用户名"')]),t._v(" "),v("li",[t._v('git config --global user.email "邮箱"')]),t._v(" "),v("li",[t._v("创建本地仓库，新建文件夹，右键git bash here")]),t._v(" "),v("li",[t._v("git init初始化")]),t._v(" "),v("li",[t._v("git remote add origin (远程仓库地址)"),v("br"),t._v("\n提交代码"),v("br"),t._v(" "),v("code",[t._v("git add .")]),v("br"),t._v(" "),v("code",[t._v('git commit -m "注释"')]),v("br"),t._v(" "),v("code",[t._v("git pull")]),v("br"),t._v(" "),v("code",[t._v("git push")])])]),t._v(" "),v("p",[t._v("分支处理")]),t._v(" "),v("ul",[v("li",[t._v("查看所有分支： "),v("code",[t._v("git branch -a")])]),t._v(" "),v("li",[t._v("创建分支： "),v("code",[t._v("git branch 分支名")])]),t._v(" "),v("li",[t._v("切换分支： "),v("code",[t._v("git checkout 分支名")])]),t._v(" "),v("li",[t._v("合并分支： "),v("code",[t._v("git merge")]),t._v("/"),v("code",[t._v("git rebase")])]),t._v(" "),v("li",[t._v("删除分支： "),v("code",[t._v("git push origin --delete 分支名")])]),t._v(" "),v("li",[t._v("覆盖分支："),v("br"),t._v("\n例如：分支aaa覆盖master分支"),v("br"),t._v("\n首先切换到master分支，执行"),v("code",[t._v("git reset --hard origin/aaa")]),t._v(";"),v("br"),t._v("\n此时master(本地)分支的代码已被覆盖，再执行"),v("code",[t._v("git push -f")]),t._v("推送到远程分支")])])])}),[],!1,null,null,null);i.default=e.exports}}]);