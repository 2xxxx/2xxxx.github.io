(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{364:function(t,r,e){"use strict";e.r(r);var a=e(42),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"框架架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#框架架构"}},[t._v("#")]),t._v(" 框架架构")]),t._v(" "),e("h2",{attrs:{id:"mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[t._v("#")]),t._v(" MVC")]),t._v(" "),e("p",[t._v("Model-View-Controller"),e("br"),t._v("\n模型(model): 数据保存"),e("br"),t._v("\n视图(View): 用户界面"),e("br"),t._v("\n控制器(Controller): 业务逻辑")]),t._v(" "),e("p",[t._v("MVC所有的通信都是单向的，View传送指令到Controller,Controller完成业务逻辑后要求Model改变状态，Model将新的数据发送给View,用户得到反馈")]),t._v(" "),e("h2",{attrs:{id:"mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),e("p",[t._v("Model-View-Viewmodel,是MVC的改进版，可以解决随着业务变复杂，视图交互变复杂导致的Controller臃肿的问题。"),e("br"),t._v("\n采用双向绑定")]),t._v(" "),e("h2",{attrs:{id:"mvp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvp"}},[t._v("#")]),t._v(" MVP")])])}),[],!1,null,null,null);r.default=s.exports}}]);