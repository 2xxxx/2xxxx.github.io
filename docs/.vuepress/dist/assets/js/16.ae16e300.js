(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{362:function(t,a,e){"use strict";e.r(a);var r=e(42),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"变量和类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量和类型"}},[t._v("#")]),t._v(" 变量和类型")]),t._v(" "),e("h2",{attrs:{id:"变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),e("p",[t._v("变量是一个值的符号名称，可通过名称引用值。")]),t._v(" "),e("p",[t._v("定义："),e("code",[t._v("var 变量名")]),t._v("  （声明提前，赋值不提前）")]),t._v(" "),e("h2",{attrs:{id:"类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),e("p",[t._v("基本数据类型：number,string,boolean,object,null,undefined,symbol.")]),t._v(" "),e("ul",[e("li",[t._v("简单类型：数值类型，字符串类型，bool类型，null，undefined")]),t._v(" "),e("li",[t._v("对象类型：除了以上五种，剩下都是.")])]),t._v(" "),e("p",[t._v("javaScript中所有类型都能转化成bool类型。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//为假\nvar num = 0; //undefined,null,'',false，0，NaN转bool都为false\nconsole.log(!!num) //false\n")])])]),e("h3",{attrs:{id:"类型判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型判断"}},[t._v("#")]),t._v(" 类型判断")]),t._v(" "),e("h4",{attrs:{id:"typeof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[t._v("#")]),t._v(" typeof")]),t._v(" "),e("p",[t._v("可判断的类型："),e("code",[t._v("number/string/boolean/undefined/object/function/symbol")]),t._v("\nps:"),e("code",[t._v("typeof null")]),t._v("为"),e("code",[t._v("object")])]),t._v(" "),e("h4",{attrs:{id:"instanceof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[t._v("#")]),t._v(" instanceof")]),t._v(" "),e("p",[e("code",[t._v("obj instanceof constructor")]),t._v(" "),e("code",[t._v("instanceof")]),t._v("是利用原型链来判断，构造函数的prototype指向的对象是否在obj对象的原型链上，可用来判断数组、正则等")]),t._v(" "),e("h4",{attrs:{id:"object-prototype-tostring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-tostring"}},[t._v("#")]),t._v(" object.prototype.toString")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('const arr = [1, 2, 3];\nconsole.log(Object.prototype.toString.call(arr)) //"[object Array]"\n')])])]),e("p",[t._v("call是用来改变toString方法的执行上下文，可用apply代替")]),t._v(" "),e("h4",{attrs:{id:"其他方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他方法"}},[t._v("#")]),t._v(" 其他方法")]),t._v(" "),e("ol",[e("li",[t._v("NAN。NaN不和任何值包括自身相等，可通过isNaN(num)判断")]),t._v(" "),e("li",[t._v("Array。Array.isArray()可判断，但老浏览器存在一定兼容性")])])])}),[],!1,null,null,null);a.default=s.exports}}]);