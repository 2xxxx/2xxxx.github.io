(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{358:function(t,s,v){"use strict";v.r(s);var _=v(42),r=Object(_.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"前端安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[t._v("#")]),t._v(" 前端安全")]),t._v(" "),v("h2",{attrs:{id:"xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" XSS")]),t._v(" "),v("p",[t._v("跨站脚本攻击，攻击者通过注入非法的HTML标签或js代码，使之在用户浏览器上运行，利用这些恶意脚本，控制用户浏览器，获取用户信息等。")]),t._v(" "),v("h3",{attrs:{id:"xss攻击分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击分类"}},[t._v("#")]),t._v(" XSS攻击分类")]),t._v(" "),v("p",[v("strong",[t._v("存储型")])]),t._v(" "),v("p",[v("strong",[t._v("反射性")])]),t._v(" "),v("p",[v("strong",[t._v("DOM型")])]),t._v(" "),v("p",[v("strong",[t._v("解决方法")])]),t._v(" "),v("ol",[v("li",[t._v("输入格式校验（数字，电话，URL等）")]),t._v(" "),v("li",[t._v("输入内容进行转义")]),t._v(" "),v("li",[t._v("httpOnly")])]),t._v(" "),v("h2",{attrs:{id:"csrf"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),v("p",[t._v("跨站请求伪造，网站中的一些提交行为被黑客利用，在用户访问黑客的网站时进行的操作会被操作到其他网站上。")]),t._v(" "),v("p",[v("strong",[t._v("解决办法")])]),t._v(" "),v("ol",[v("li",[t._v("重要操作使用验证码")]),t._v(" "),v("li",[t._v("尽量使用POST")]),t._v(" "),v("li",[t._v("可以使用token来验证")]),t._v(" "),v("li",[t._v("验证请求头中的refer")])]),t._v(" "),v("p",[t._v("ps:该攻击下，httpOnly无法防住，因为CSRF是伪装成用户发送请求，浏览器会自动携带cookie。")]),t._v(" "),v("p",[v("strong",[t._v("扩展")])]),t._v(" "),v("ul",[v("li",[v("h3",{attrs:{id:"token"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[t._v("#")]),t._v(" token")])])]),t._v(" "),v("p",[v("strong",[t._v("验证流程")]),t._v("：登录后后端会通过随机数和加密算法加密账号密码生成一个token返回给客户端，客户端会将token存储起来，每次客户端请求时都需要开发者手动将token放到header中带过去，服务端每次只需要对token进行验证就能判断是否进行后续操作。"),v("br"),t._v(" "),v("strong",[t._v("作用")]),t._v("：token能防住CSRF攻击，因为在发送请求时，浏览器不会自动带上token。"),v("br"),t._v(" "),v("strong",[t._v("注意")]),t._v("：但是token无法防住XSS,因为XSS攻击成功的话，可以获取cookie、localStorage、sessionStorage内数据，甚至能直接在用户浏览器内发送ajax请求。所以两种攻击都要做好防护。")])])}),[],!1,null,null,null);s.default=r.exports}}]);